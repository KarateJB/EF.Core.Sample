// <auto-generated />
using System;
using EFCore.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCore.Dal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EFCore.Dal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CardNo")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<byte[]>("Phone")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 64, 16, 110, 27, 124, 91, 60, 2, 121, 210, 68, 1, 153, 239, 118, 91, 83, 169, 103, 120, 239, 24, 9, 18, 135, 251, 229, 73, 157, 10, 6, 48, 95, 233, 160, 244, 195, 127, 119, 36, 42, 168, 16, 53, 177, 254, 96, 177, 56, 190, 215, 162, 92, 67, 91, 6, 158, 148, 203, 117, 158, 138, 137, 242, 43, 114, 40, 108, 128, 176, 251, 210, 233, 16, 82, 145, 190, 8, 245 },
                            Name = "JB",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 105, 231, 101, 167, 44, 86, 2, 205, 100, 210, 59, 1, 11, 236, 229, 13, 118, 168, 73, 71, 219, 18, 166, 116, 135, 169, 68, 73, 222, 162, 255, 9, 82, 165, 1, 63, 102, 171, 181, 3, 188, 181, 139, 206, 233, 215, 128, 99, 208, 172, 31, 236, 220, 21, 35, 76, 74, 194, 216, 97, 207, 21, 140, 154, 187, 237, 83, 43, 250, 206 }
                        },
                        new
                        {
                            Id = 2,
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 55, 65, 205, 76, 50, 88, 131, 104, 126, 210, 68, 1, 173, 125, 219, 15, 204, 33, 60, 244, 135, 229, 32, 205, 0, 144, 253, 124, 175, 83, 191, 171, 109, 143, 24, 131, 195, 219, 160, 148, 194, 174, 18, 59, 157, 125, 89, 33, 138, 158, 254, 252, 99, 101, 115, 40, 135, 179, 213, 165, 210, 1, 36, 67, 90, 237, 210, 146, 161, 100, 0, 204, 62, 154, 86, 31, 169, 144, 253 },
                            Name = "Amy",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 240, 62, 204, 232, 18, 116, 12, 9, 114, 210, 59, 1, 230, 80, 141, 116, 170, 45, 109, 55, 251, 68, 200, 211, 96, 15, 76, 55, 186, 92, 97, 21, 149, 70, 241, 192, 217, 105, 217, 4, 243, 132, 95, 177, 217, 82, 196, 91, 203, 78, 32, 136, 176, 96, 45, 178, 169, 182, 116, 29, 27, 216, 187, 34, 222, 134, 38, 219, 128, 55 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
