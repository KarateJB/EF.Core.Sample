// <auto-generated />
using System;
using EFCore.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCore.Dal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200107101345_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EFCore.Dal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CardNo")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<byte[]>("Phone")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 106, 136, 26, 224, 90, 95, 124, 83, 126, 210, 68, 1, 171, 25, 102, 131, 59, 20, 110, 83, 244, 71, 108, 88, 32, 11, 137, 148, 82, 224, 251, 95, 226, 61, 52, 157, 84, 83, 190, 102, 20, 124, 163, 17, 110, 43, 226, 100, 33, 240, 202, 162, 107, 79, 131, 94, 167, 236, 219, 6, 213, 9, 231, 168, 190, 99, 10, 57, 206, 150, 172, 21, 91, 184, 123, 127, 58, 231, 2 },
                            Name = "JB",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 33, 157, 200, 32, 139, 120, 86, 138, 121, 210, 59, 1, 55, 249, 235, 202, 210, 220, 98, 114, 63, 171, 142, 168, 195, 147, 233, 238, 1, 67, 189, 233, 101, 106, 51, 77, 150, 50, 59, 239, 27, 121, 89, 231, 186, 188, 225, 225, 67, 59, 216, 71, 152, 20, 158, 94, 145, 35, 122, 132, 135, 40, 227, 161, 126, 31, 250, 33, 49, 224 }
                        },
                        new
                        {
                            Id = 2,
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 136, 17, 47, 161, 135, 170, 36, 171, 113, 210, 68, 1, 177, 100, 7, 100, 245, 42, 6, 27, 114, 199, 69, 6, 158, 225, 97, 184, 205, 36, 11, 83, 189, 170, 10, 226, 224, 36, 196, 176, 42, 53, 94, 64, 107, 198, 99, 86, 178, 93, 18, 212, 129, 85, 173, 44, 115, 153, 29, 229, 19, 134, 82, 64, 71, 65, 105, 42, 83, 204, 103, 95, 194, 17, 9, 158, 191, 205, 217 },
                            Name = "Amy",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 11, 177, 41, 225, 67, 48, 53, 121, 106, 210, 59, 1, 97, 242, 175, 240, 53, 195, 150, 218, 149, 25, 68, 5, 66, 117, 126, 180, 18, 35, 186, 180, 126, 50, 58, 186, 58, 131, 157, 124, 26, 108, 204, 2, 60, 138, 189, 135, 83, 216, 111, 127, 223, 244, 157, 192, 40, 176, 89, 207, 194, 182, 181, 70, 104, 227, 188, 182, 189, 235 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
