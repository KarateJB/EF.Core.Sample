// <auto-generated />
using System;
using EFCore.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCore.Dal.Migrations
{
    [DbContext(typeof(PgDbContext))]
    partial class PgDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EFCore.Dal.Models.SysMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreateBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreateOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<string>("RemoveBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("RemoveOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdateOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SysMetadatas", "system");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce32bd49-7a7c-4bd1-b2b9-7e960ad86307"),
                            CreateBy = "System",
                            CreateOn = new DateTimeOffset(new DateTime(2021, 2, 1, 8, 56, 59, 734, DateTimeKind.Unspecified).AddTicks(6872), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDisabled = false
                        },
                        new
                        {
                            Id = new Guid("3e177c71-f84e-4c23-9bf4-b322b350c8b3"),
                            CreateBy = "System",
                            CreateOn = new DateTimeOffset(new DateTime(2021, 2, 1, 8, 56, 59, 736, DateTimeKind.Unspecified).AddTicks(8593), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDisabled = false
                        });
                });

            modelBuilder.Entity("EFCore.Dal.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("CardNo")
                        .HasColumnType("bytea");

                    b.Property<Guid?>("MetadataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<byte[]>("Phone")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Secret")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("MetadataId");

                    b.ToTable("Users", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce32bd49-7a7c-4bd1-b2b9-7e960ad86306"),
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 165, 145, 142, 107, 220, 32, 54, 183, 97, 210, 68, 1, 47, 22, 88, 18, 144, 218, 37, 232, 233, 116, 81, 201, 145, 205, 98, 199, 130, 118, 23, 160, 218, 227, 31, 174, 78, 226, 117, 47, 148, 74, 232, 140, 156, 230, 169, 18, 147, 91, 21, 163, 186, 83, 244, 172, 172, 96, 253, 54, 161, 147, 86, 167, 159, 23, 133, 214, 117, 199, 13, 102, 148, 46, 175, 73, 198, 62, 147 },
                            MetadataId = new Guid("ce32bd49-7a7c-4bd1-b2b9-7e960ad86307"),
                            Name = "JB",
                            Password = "$1$z3Wa.Jxx$gNRfVPxunIo7HJC1rycko1",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 6, 224, 21, 217, 70, 68, 189, 18, 96, 210, 59, 1, 167, 163, 36, 121, 131, 143, 157, 25, 213, 222, 162, 94, 229, 152, 19, 11, 210, 221, 202, 232, 132, 191, 0, 54, 134, 245, 231, 253, 3, 80, 118, 177, 140, 106, 118, 26, 52, 226, 164, 136, 124, 190, 79, 46, 113, 160, 14, 41, 171, 194, 193, 108, 7, 51, 150, 23, 252, 90 }
                        },
                        new
                        {
                            Id = new Guid("3e177c71-f84e-4c23-9bf4-b322b350c8b2"),
                            CardNo = new byte[] { 195, 13, 4, 7, 3, 2, 151, 22, 66, 59, 163, 29, 227, 11, 106, 210, 68, 1, 77, 124, 210, 153, 109, 231, 113, 107, 139, 12, 157, 42, 239, 56, 188, 78, 240, 102, 62, 10, 11, 147, 49, 221, 107, 70, 237, 165, 63, 94, 107, 191, 38, 208, 1, 168, 58, 213, 51, 227, 138, 52, 106, 96, 38, 138, 96, 205, 251, 241, 146, 74, 105, 27, 50, 203, 71, 131, 14, 27, 42, 129, 203, 236, 80, 181, 76 },
                            MetadataId = new Guid("3e177c71-f84e-4c23-9bf4-b322b350c8b3"),
                            Name = "Amy",
                            Password = "$1$xm4tRWt1$EMBdqxmkb0KH5GkVOs0lv.",
                            Phone = new byte[] { 195, 13, 4, 7, 3, 2, 184, 82, 214, 239, 154, 246, 27, 222, 119, 210, 59, 1, 153, 144, 112, 104, 112, 142, 68, 79, 162, 156, 255, 249, 172, 57, 123, 40, 69, 214, 63, 161, 235, 56, 217, 186, 137, 166, 183, 171, 212, 142, 8, 235, 87, 1, 242, 4, 209, 121, 210, 197, 118, 37, 55, 227, 135, 249, 80, 119, 105, 165, 18, 78, 11, 62, 41, 31, 211, 193 }
                        });
                });

            modelBuilder.Entity("EFCore.Dal.Models.User", b =>
                {
                    b.HasOne("EFCore.Dal.Models.SysMetadata", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId");

                    b.Navigation("Metadata");
                });
#pragma warning restore 612, 618
        }
    }
}
